apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: kong-fc
spec:
  tags:
  - annotations: null
    from:
      kind: DockerImage
      name: docker-registry.default.svc:5000/dbc-oem-tools/kong-fc
    name: latest
status:
  dockerImageRepository: ""
---
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  labels:
    app: kong-fc
  name: kong-fc
spec:
  output:
    to:
      kind: ImageStreamTag
      name: kong-fc:latest
  source:
    dockerfile: |-
      FROM fedora:29
      MAINTAINER leo.lou@gov.bc.ca

      LABEL name="Kong" \
            vendor="Kong" \
            version="${KONG_VERSION}" \
            release="1" \
            url="https://konghq.com" \
            summary="Next-Generation API Platform for Modern Architectures" \
            description="Next-Generation API Platform for Modern Architectures"

      RUN dnf install -y wget https://bintray.com/kong/kong-community-edition-rpm/download_file?file_path=rhel/7/kong-community-edition-$KONG_VERSION.rhel7.noarch.rpm && \
          # OpenShift specific. OpenShift runs containers using an arbitrarily assigned user ID.
          # This user doesn't have access to change file permissions during runtime, they have to be changed during image building.
          # https://docs.okd.io/latest/creating_images/guidelines.html#use-uid
          mkdir -p "/usr/local/kong" && \
          chgrp -R 0 "/usr/local/kong" && \
          chmod -R g=u "/usr/local/kong" && \
          wget -O /LICENSE "https://www.apache.org/licenses/LICENSE-2.0.txt" && \
          wget -O /entrypoint.sh "https://raw.githubusercontent.com/Kong/docker-kong/1.1.2/rhel/docker-entrypoint.sh" && chmod 755 /entrypoint.sh && \
          dnf clean all

      ENTRYPOINT ["/entrypoint.sh"]
      EXPOSE 8000 8443 8001 8444
      STOPSIGNAL SIGTERM
      CMD ["kong", "docker-start"]
    type: Dockerfile
  strategy:
    dockerStrategy:
      env:
        - name: KONG_VERSION
          value: '1.1.2'
      from:
        kind: DockerImage
        name: fedora:29
    type: Docker
