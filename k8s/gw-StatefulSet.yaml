---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gateway
  name: gateway
spec:
  type: LoadBalancer
  loadBalancerSourceRanges:
  - 0.0.0.0/0
  ports:
  - name: http-proxy
    port: 8000
    targetPort: 8000
    protocol: TCP
  - name: gw-admin-proxy
    port: 8001
    targetPort: 8001
    protocol: TCP
  - name: gw-cache
    port: 6379
    targetPort: 6379
    protocol: TCP     
  selector:
    app: gateway
---
apiVersion: v1
data:
  redis.conf: |-
    appendonly no
    protected-mode yes
kind: ConfigMap
metadata:
  name: gw-cache
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: gateway
  labels:
    app: gateway
spec:
  selector:
    matchLabels:
      app: gateway
  serviceName: gateway
  replicas: 1
  template:
    metadata:
      labels:
        app: gateway
      annotations:
    spec:
      containers:
      - name: kong
        image: docker-registry.default.svc:5000/dbc-konga-tools/kong-k8s:latest
        env:
          - name: KONG_ADMIN_LISTEN
            value: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
          - name: KONG_DATABASE
            value: cassandra
          - name: KONG_CASSANDRA_CONTACT_POINTS
            value: cassandra
          - name: KONG_CASSANDRA_KEYSPACE
            value: kong
          - name: KONG_CASSANDRA_REPL_FACTOR
            value: "2"
          - name: KONG_PROXY_ACCESS_LOG
            value: "/dev/stdout"
          - name: KONG_ADMIN_ACCESS_LOG
            value: "/dev/stdout"
          - name: KONG_PROXY_ERROR_LOG
            value: "/dev/stderr"
          - name: KONG_ADMIN_ERROR_LOG
            value: "/dev/stderr"
          - name: KONG_CUSTOM_PLUGINS
            value: "gwa-ip-anonymity,oidc"
          - name: KONG_DB_UPDATE_PROPAGATION
            value: "15"
        ports:
        - name: admin
          containerPort: 8001
          protocol: TCP
        - name: proxy
          containerPort: 8000
          protocol: TCP
        - name: proxy-ssl
          containerPort: 8443
          protocol: TCP
        - name: admin-ssl
          containerPort: 8444
          protocol: TCP
        volumeMounts:
        - name: kong-run
          mountPath: /usr/local/kong   
      - name: redis
        image: redis
        ports:
        - containerPort: 6379
          name: client
        command: ["redis-server"]
        args: ["/conf/redis.conf"]
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli -h $(hostname) ping"
          initialDelaySeconds: 15
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli -h $(hostname) ping"
          initialDelaySeconds: 20
          periodSeconds: 3
        volumeMounts:
        - name: conf
          mountPath: /conf
          readOnly: false
        - name: data
          mountPath: /data
          readOnly: false
      volumes:
      - name: conf
        configMap:
          name: gw-cache
          items: 
          - key: redis.conf
            path: redis.conf
      - name: data
        emptyDir: {}
      - name: kong-run
        emptyDir: {}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: kong-migration
spec:
  template:
    metadata:
      name: kong-migration
    spec:
      containers:
      - name: kong-migration
        image: docker-registry.default.svc:5000/dbc-konga-tools/kong-k8s:latest
        env:
          - name: KONG_NGINX_DAEMON
            value: 'off'
          - name: KONG_DATABASE
            value: cassandra
          - name: KONG_CASSANDRA_CONTACT_POINTS
            value: cassandra
          - name: KONG_CASSANDRA_KEYSPACE
            value: kong
        command: [ "/bin/sh", "-c", "kong migrations up" ]
      restartPolicy: Never
